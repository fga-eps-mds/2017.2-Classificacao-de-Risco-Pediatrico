# -*- coding: utf-8 -*-
# Generated by Django 1.11.5 on 2017-09-26 02:58
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uf', models.CharField(max_length=50, verbose_name='UF')),
                ('city', models.CharField(max_length=50, verbose_name='Cidade')),
                ('neighborhood', models.CharField(max_length=100, verbose_name='Bairro')),
                ('street', models.CharField(max_length=50, verbose_name='Rua')),
                ('block', models.CharField(max_length=50, verbose_name='Conjunto')),
                ('number', models.CharField(max_length=10, verbose_name='Numero')),
            ],
        ),
        migrations.CreateModel(
            name='Patient',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, verbose_name='Nome')),
                ('guardian', models.CharField(help_text='Informe o nome do respons치vel', max_length=50, verbose_name='Nome do Respons치vel')),
                ('birth_date', models.DateTimeField(help_text='Informe a data de Nascimento', verbose_name='Data de Nascimento')),
                ('cpf', models.CharField(default='', help_text='Informe o CPF', max_length=11, unique=True, verbose_name='CPF')),
                ('parents_name', models.CharField(help_text='Informe o nome dos pais', max_length=150, unique=True, verbose_name='Nome dos pais')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Staff',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('id_user', models.CharField(max_length=150, unique=True, verbose_name='ID de usu치rio')),
                ('email', models.EmailField(default='', max_length=254, unique=True, verbose_name='Email do usu치rio')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Admin',
            fields=[
                ('staff_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='users.Staff')),
                ('name', models.CharField(max_length=150, verbose_name='Nome')),
            ],
            options={
                'abstract': False,
            },
            bases=('users.staff', models.Model),
        ),
        migrations.CreateModel(
            name='Attendant',
            fields=[
                ('staff_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='users.Staff')),
                ('name', models.CharField(max_length=150, verbose_name='Nome')),
            ],
            options={
                'abstract': False,
            },
            bases=('users.staff', models.Model),
        ),
        migrations.CreateModel(
            name='Receptionist',
            fields=[
                ('staff_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='users.Staff')),
                ('name', models.CharField(max_length=150, verbose_name='Nome')),
            ],
            options={
                'abstract': False,
            },
            bases=('users.staff', models.Model),
        ),
    ]
